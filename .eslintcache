[{"D:\\Preparation\\New folder\\cispostblog\\src\\index.js":"1","D:\\Preparation\\New folder\\cispostblog\\src\\components\\Home.js":"2","D:\\Preparation\\New folder\\cispostblog\\src\\redux\\reducers\\commentReducer.js":"3"},{"size":500,"mtime":1608907516970,"results":"4","hashOfConfig":"5"},{"size":4454,"mtime":1611128063029,"results":"6","hashOfConfig":"5"},{"size":2396,"mtime":1611127650256,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dedgl5",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Preparation\\New folder\\cispostblog\\src\\index.js",[],"D:\\Preparation\\New folder\\cispostblog\\src\\components\\Home.js",["14","15"],"D:\\Preparation\\New folder\\cispostblog\\src\\redux\\reducers\\commentReducer.js",["16","17","18","19"],{"ruleId":"20","severity":1,"message":"21","line":7,"column":10,"nodeType":"22","messageId":"23","endLine":7,"endColumn":14},{"ruleId":"24","severity":1,"message":"25","line":22,"column":7,"nodeType":"26","endLine":22,"endColumn":9,"suggestions":"27"},{"ruleId":"28","severity":1,"message":"29","line":22,"column":47,"nodeType":"30","messageId":"31","endLine":22,"endColumn":49},{"ruleId":"32","severity":1,"message":"33","line":23,"column":39,"nodeType":"34","messageId":"35","endLine":23,"endColumn":41},{"ruleId":"32","severity":1,"message":"33","line":40,"column":64,"nodeType":"34","messageId":"35","endLine":40,"endColumn":66},{"ruleId":"32","severity":1,"message":"33","line":54,"column":72,"nodeType":"34","messageId":"35","endLine":54,"endColumn":74},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["36"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"37","fix":"38"},"Update the dependencies array to be: [props]",{"range":"39","text":"40"},[664,666],"[props]"]